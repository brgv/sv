syntax = "proto3";

package rpc;

// --------------------------------------------------------------------------------------------------------------------

option go_package = "github.com/brgv/sv/gen/rpc";

// --------------------------------------------------------------------------------------------------------------------

//import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";

import "proto/request.proto";
import "proto/response.proto";

// --------------------------------------------------------------------------------------------------------------------

message Person {
  uint64 id = 1;
  uint64 priority = 2;

  string gid = 3;

  google.protobuf.Timestamp date_created = 4 [json_name = "date_created"];
  google.protobuf.Timestamp date_updated = 5 [json_name = "date_updated"];

  google.protobuf.Timestamp date_removed = 6 [json_name = "date_removed"];
  bool removed = 7;

  google.protobuf.Timestamp date_enabled = 8 [json_name = "date_enabled"];
  bool enabled = 9;

  string last_name = 10 [json_name = "last_name"];
  string first_name = 11 [json_name = "first_name"];
  string middle_name = 12 [json_name = "middle_name"];

}

// --------------------------------------------------------------------------------------------------------------------

message PersonRequest {
  Person data = 1;
}

// --------------------------------------------------------------------------------------------------------------------

message PersonResponse {
  Person data = 1;
}

message ListPersonResponse {
  repeated Person data = 1;
}

// --------------------------------------------------------------------------------------------------------------------

service PersonService {

  rpc Create (PersonRequest) returns (PersonResponse) {
    option (google.api.http) = {
            post: "/api/v1/persons"
            body: "*"
        };
  }

  rpc Update (PersonRequest) returns (PersonResponse) {
    option (google.api.http) = {
            put: "/api/v1/persons/{data.id}"
            body: "*"
        };
  }

  rpc Destroy (IdentityRequest) returns (StatusResponse) {
    option (google.api.http) = {
            delete: "/api/v1/persons/{id}"
        };
  }

  rpc Retrieve (IdentityRequest) returns (PersonResponse) {
    option (google.api.http) = {
            get: "/api/v1/persons/{id}"
        };
  }

  rpc Read (ListRequest) returns (ListPersonResponse) {
    option (google.api.http) = {
            get: "/api/v1/persons"
        };
  }

}

// --------------------------------------------------------------------------------------------------------------------
