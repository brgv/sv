syntax = "proto3";

package rpc;

// --------------------------------------------------------------------------------------------------------------------

option go_package = "github.com/brgv/sv/gen/rpc";

// --------------------------------------------------------------------------------------------------------------------

//import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";

import "proto/request.proto";
import "proto/response.proto";

// --------------------------------------------------------------------------------------------------------------------

message Position {
  uint64 id = 1;
  uint64 priority = 2;

  string gid = 3;

  google.protobuf.Timestamp date_created = 4 [json_name = "date_created"];
  google.protobuf.Timestamp date_updated = 5 [json_name = "date_updated"];

  google.protobuf.Timestamp date_removed = 6 [json_name = "date_removed"];
  bool removed = 7;

  google.protobuf.Timestamp date_enabled = 8 [json_name = "date_enabled"];
  bool enabled = 9;

  string name = 10;
}

// --------------------------------------------------------------------------------------------------------------------

message PositionRequest {
  string version = 1;
  uint64 id = 2;
  Position data = 3;
}

// --------------------------------------------------------------------------------------------------------------------

message PositionResponse {
  Position data = 1;
}

message ListPositionResponse {
  repeated Position data = 1;
}

// --------------------------------------------------------------------------------------------------------------------

service PositionService {

  // Create
  rpc Create (PositionRequest) returns (PositionResponse) {
    option (google.api.http) = {
      post: "/api/sv/v1/positions"
      body: "*"
    };
  }

  // Update
  rpc Update (PositionRequest) returns (PositionResponse) {
    option (google.api.http) = {
      put: "/api/sv/v1/positions/{id}"
      body: "*"
    };
  }

  // Destroy
  rpc Destroy (IdentityRequest) returns (StatusResponse) {
    option (google.api.http) = {
      delete: "/api/sv/v1/positions/{id}"
    };
  }

  // Retrieve
  rpc Retrieve (IdentityRequest) returns (PositionResponse) {
    option (google.api.http) = {
      get: "/api/sv/v1/positions/{id}"
    };
  }

  // Read
  rpc Read (ListRequest) returns (ListPositionResponse) {
    option (google.api.http) = {
      get: "/api/sv/v1/positions"
    };
  }

  // Find
  rpc Find (ListRequest) returns (ListItemResponse) {
    option (google.api.http) = {
      get: "/api/sv/v1/positions/find"
    };
  }

}

// --------------------------------------------------------------------------------------------------------------------
