// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0-devel
// 	protoc        v3.12.3
// source: proto/v1/Position.proto

package rpc

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Запрос позиции
type PositionId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Уникальный идентификатор записи
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PositionId) Reset() {
	*x = PositionId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_Position_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PositionId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PositionId) ProtoMessage() {}

func (x *PositionId) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_Position_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PositionId.ProtoReflect.Descriptor instead.
func (*PositionId) Descriptor() ([]byte, []int) {
	return file_proto_v1_Position_proto_rawDescGZIP(), []int{0}
}

func (x *PositionId) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Данные позиции
type PositionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Название записи
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *PositionData) Reset() {
	*x = PositionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_Position_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PositionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PositionData) ProtoMessage() {}

func (x *PositionData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_Position_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PositionData.ProtoReflect.Descriptor instead.
func (*PositionData) Descriptor() ([]byte, []int) {
	return file_proto_v1_Position_proto_rawDescGZIP(), []int{1}
}

func (x *PositionData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Позиция
type Position struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Уникальный идентификатор записи
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Название записи
	Name string `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Position) Reset() {
	*x = Position{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_Position_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Position) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Position) ProtoMessage() {}

func (x *Position) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_Position_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Position.ProtoReflect.Descriptor instead.
func (*Position) Descriptor() ([]byte, []int) {
	return file_proto_v1_Position_proto_rawDescGZIP(), []int{2}
}

func (x *Position) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Position) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Запрос списка записей
type PositionListFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Количество записей
	Limit uint64 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	// Смещение записей
	Start uint64 `protobuf:"varint,2,opt,name=start,proto3" json:"start,omitempty"`
}

func (x *PositionListFilter) Reset() {
	*x = PositionListFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_Position_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PositionListFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PositionListFilter) ProtoMessage() {}

func (x *PositionListFilter) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_Position_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PositionListFilter.ProtoReflect.Descriptor instead.
func (*PositionListFilter) Descriptor() ([]byte, []int) {
	return file_proto_v1_Position_proto_rawDescGZIP(), []int{3}
}

func (x *PositionListFilter) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *PositionListFilter) GetStart() uint64 {
	if x != nil {
		return x.Start
	}
	return 0
}

// Ответ с списком записей
type PositionList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Список записей
	Data []*Position `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *PositionList) Reset() {
	*x = PositionList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_Position_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PositionList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PositionList) ProtoMessage() {}

func (x *PositionList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_Position_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PositionList.ProtoReflect.Descriptor instead.
func (*PositionList) Descriptor() ([]byte, []int) {
	return file_proto_v1_Position_proto_rawDescGZIP(), []int{4}
}

func (x *PositionList) GetData() []*Position {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_proto_v1_Position_proto protoreflect.FileDescriptor

var file_proto_v1_Position_proto_rawDesc = []byte{
	0x0a, 0x17, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x72, 0x70, 0x63, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1c, 0x0a, 0x0a,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x22, 0x0a, 0x0c, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x2e,
	0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x40,
	0x0a, 0x12, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x22, 0x31, 0x0a, 0x0c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x21, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x32, 0xb2, 0x03, 0x0a, 0x0f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4d, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0f, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x1a, 0x0d, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x51, 0x0a, 0x0f, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f,
	0x79, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0f, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x1a, 0x0d, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x18, 0x2a, 0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x50, 0x0a, 0x0e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x11, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x0d,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x1c, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x16, 0x22, 0x11, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x51, 0x0a, 0x0e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0d, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x0d, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x21, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1b, 0x1a, 0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x58,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x17, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x1a, 0x11, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x19, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x1c, 0x5a, 0x1a, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x72, 0x67, 0x76, 0x2f, 0x73, 0x76, 0x2f, 0x67,
	0x65, 0x6e, 0x2f, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_v1_Position_proto_rawDescOnce sync.Once
	file_proto_v1_Position_proto_rawDescData = file_proto_v1_Position_proto_rawDesc
)

func file_proto_v1_Position_proto_rawDescGZIP() []byte {
	file_proto_v1_Position_proto_rawDescOnce.Do(func() {
		file_proto_v1_Position_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_v1_Position_proto_rawDescData)
	})
	return file_proto_v1_Position_proto_rawDescData
}

var file_proto_v1_Position_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_v1_Position_proto_goTypes = []interface{}{
	(*PositionId)(nil),         // 0: rpc.PositionId
	(*PositionData)(nil),       // 1: rpc.PositionData
	(*Position)(nil),           // 2: rpc.Position
	(*PositionListFilter)(nil), // 3: rpc.PositionListFilter
	(*PositionList)(nil),       // 4: rpc.PositionList
}
var file_proto_v1_Position_proto_depIdxs = []int32{
	2, // 0: rpc.PositionList.data:type_name -> rpc.Position
	0, // 1: rpc.PositionService.GetPosition:input_type -> rpc.PositionId
	0, // 2: rpc.PositionService.DestroyPosition:input_type -> rpc.PositionId
	1, // 3: rpc.PositionService.CreatePosition:input_type -> rpc.PositionData
	2, // 4: rpc.PositionService.UpdatePosition:input_type -> rpc.Position
	3, // 5: rpc.PositionService.GetPositionList:input_type -> rpc.PositionListFilter
	2, // 6: rpc.PositionService.GetPosition:output_type -> rpc.Position
	2, // 7: rpc.PositionService.DestroyPosition:output_type -> rpc.Position
	2, // 8: rpc.PositionService.CreatePosition:output_type -> rpc.Position
	2, // 9: rpc.PositionService.UpdatePosition:output_type -> rpc.Position
	4, // 10: rpc.PositionService.GetPositionList:output_type -> rpc.PositionList
	6, // [6:11] is the sub-list for method output_type
	1, // [1:6] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_v1_Position_proto_init() }
func file_proto_v1_Position_proto_init() {
	if File_proto_v1_Position_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_v1_Position_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PositionId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_Position_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PositionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_Position_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Position); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_Position_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PositionListFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_Position_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PositionList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_v1_Position_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_v1_Position_proto_goTypes,
		DependencyIndexes: file_proto_v1_Position_proto_depIdxs,
		MessageInfos:      file_proto_v1_Position_proto_msgTypes,
	}.Build()
	File_proto_v1_Position_proto = out.File
	file_proto_v1_Position_proto_rawDesc = nil
	file_proto_v1_Position_proto_goTypes = nil
	file_proto_v1_Position_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PositionServiceClient is the client API for PositionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PositionServiceClient interface {
	// Получить запись по уникальному идентификатору
	GetPosition(ctx context.Context, in *PositionId, opts ...grpc.CallOption) (*Position, error)
	// Удалить запись по уникальному идентификатору
	DestroyPosition(ctx context.Context, in *PositionId, opts ...grpc.CallOption) (*Position, error)
	// Создать запись
	CreatePosition(ctx context.Context, in *PositionData, opts ...grpc.CallOption) (*Position, error)
	// Обновить запись по уникальному идентификатору
	UpdatePosition(ctx context.Context, in *Position, opts ...grpc.CallOption) (*Position, error)
	// Получить список записей
	GetPositionList(ctx context.Context, in *PositionListFilter, opts ...grpc.CallOption) (*PositionList, error)
}

type positionServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPositionServiceClient(cc grpc.ClientConnInterface) PositionServiceClient {
	return &positionServiceClient{cc}
}

func (c *positionServiceClient) GetPosition(ctx context.Context, in *PositionId, opts ...grpc.CallOption) (*Position, error) {
	out := new(Position)
	err := c.cc.Invoke(ctx, "/rpc.PositionService/GetPosition", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *positionServiceClient) DestroyPosition(ctx context.Context, in *PositionId, opts ...grpc.CallOption) (*Position, error) {
	out := new(Position)
	err := c.cc.Invoke(ctx, "/rpc.PositionService/DestroyPosition", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *positionServiceClient) CreatePosition(ctx context.Context, in *PositionData, opts ...grpc.CallOption) (*Position, error) {
	out := new(Position)
	err := c.cc.Invoke(ctx, "/rpc.PositionService/CreatePosition", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *positionServiceClient) UpdatePosition(ctx context.Context, in *Position, opts ...grpc.CallOption) (*Position, error) {
	out := new(Position)
	err := c.cc.Invoke(ctx, "/rpc.PositionService/UpdatePosition", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *positionServiceClient) GetPositionList(ctx context.Context, in *PositionListFilter, opts ...grpc.CallOption) (*PositionList, error) {
	out := new(PositionList)
	err := c.cc.Invoke(ctx, "/rpc.PositionService/GetPositionList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PositionServiceServer is the server API for PositionService service.
type PositionServiceServer interface {
	// Получить запись по уникальному идентификатору
	GetPosition(context.Context, *PositionId) (*Position, error)
	// Удалить запись по уникальному идентификатору
	DestroyPosition(context.Context, *PositionId) (*Position, error)
	// Создать запись
	CreatePosition(context.Context, *PositionData) (*Position, error)
	// Обновить запись по уникальному идентификатору
	UpdatePosition(context.Context, *Position) (*Position, error)
	// Получить список записей
	GetPositionList(context.Context, *PositionListFilter) (*PositionList, error)
}

// UnimplementedPositionServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPositionServiceServer struct {
}

func (*UnimplementedPositionServiceServer) GetPosition(context.Context, *PositionId) (*Position, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPosition not implemented")
}
func (*UnimplementedPositionServiceServer) DestroyPosition(context.Context, *PositionId) (*Position, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DestroyPosition not implemented")
}
func (*UnimplementedPositionServiceServer) CreatePosition(context.Context, *PositionData) (*Position, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePosition not implemented")
}
func (*UnimplementedPositionServiceServer) UpdatePosition(context.Context, *Position) (*Position, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePosition not implemented")
}
func (*UnimplementedPositionServiceServer) GetPositionList(context.Context, *PositionListFilter) (*PositionList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPositionList not implemented")
}

func RegisterPositionServiceServer(s *grpc.Server, srv PositionServiceServer) {
	s.RegisterService(&_PositionService_serviceDesc, srv)
}

func _PositionService_GetPosition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PositionId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PositionServiceServer).GetPosition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.PositionService/GetPosition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PositionServiceServer).GetPosition(ctx, req.(*PositionId))
	}
	return interceptor(ctx, in, info, handler)
}

func _PositionService_DestroyPosition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PositionId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PositionServiceServer).DestroyPosition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.PositionService/DestroyPosition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PositionServiceServer).DestroyPosition(ctx, req.(*PositionId))
	}
	return interceptor(ctx, in, info, handler)
}

func _PositionService_CreatePosition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PositionData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PositionServiceServer).CreatePosition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.PositionService/CreatePosition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PositionServiceServer).CreatePosition(ctx, req.(*PositionData))
	}
	return interceptor(ctx, in, info, handler)
}

func _PositionService_UpdatePosition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Position)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PositionServiceServer).UpdatePosition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.PositionService/UpdatePosition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PositionServiceServer).UpdatePosition(ctx, req.(*Position))
	}
	return interceptor(ctx, in, info, handler)
}

func _PositionService_GetPositionList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PositionListFilter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PositionServiceServer).GetPositionList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.PositionService/GetPositionList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PositionServiceServer).GetPositionList(ctx, req.(*PositionListFilter))
	}
	return interceptor(ctx, in, info, handler)
}

var _PositionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.PositionService",
	HandlerType: (*PositionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPosition",
			Handler:    _PositionService_GetPosition_Handler,
		},
		{
			MethodName: "DestroyPosition",
			Handler:    _PositionService_DestroyPosition_Handler,
		},
		{
			MethodName: "CreatePosition",
			Handler:    _PositionService_CreatePosition_Handler,
		},
		{
			MethodName: "UpdatePosition",
			Handler:    _PositionService_UpdatePosition_Handler,
		},
		{
			MethodName: "GetPositionList",
			Handler:    _PositionService_GetPositionList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/v1/Position.proto",
}
